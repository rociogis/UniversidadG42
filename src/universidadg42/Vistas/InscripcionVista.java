/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package universidadg42.Vistas;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import universidadg42.AccesoADatos.AlumnoData;
import universidadg42.AccesoADatos.InscripcionData;
import universidadg42.Entidades.Alumno;
import universidadg42.Entidades.Inscripcion;
import universidadg42.Entidades.Materia;

/**
 *
 * @author 54351
 */
public class InscripcionVista extends javax.swing.JInternalFrame {
    private DefaultTableModel modelo=new DefaultTableModel(){
    
    public boolean inCellEditable(int f,int c){
        return false;
    }
    
};
    InscripcionData Idata = new InscripcionData();
    AlumnoData Adata = new AlumnoData();

    /**
     * Creates new form InscripcionVista
     */
    public InscripcionVista() {
        initComponents();
        armarcabTabla();
        cargarCombo();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jcbAlumnos = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jrInscriptas = new javax.swing.JRadioButton();
        jrNoInscriptas = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtInscripcion = new javax.swing.JTable();
        jbInscribir = new javax.swing.JButton();
        jbAnular = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();

        setTitle("Formulario de Inscripciones");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Formulario de Inscripcion");

        jLabel2.setText("Seleccione un alumno :");

        jcbAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbAlumnosActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Listado de Materias");

        jrInscriptas.setText("Materias Inscriptas");
        jrInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrInscriptasActionPerformed(evt);
            }
        });

        jrNoInscriptas.setText("Materias No Inscriptas");
        jrNoInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrNoInscriptasActionPerformed(evt);
            }
        });

        jtInscripcion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtInscripcion);

        jbInscribir.setText("INSCRIBIR");
        jbInscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInscribirActionPerformed(evt);
            }
        });

        jbAnular.setText("ANULAR INSCRIPCION");
        jbAnular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAnularActionPerformed(evt);
            }
        });

        jbSalir.setText("SALIR");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jrInscriptas, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(89, 89, 89)
                                .addComponent(jrNoInscriptas, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jcbAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jbInscribir)
                .addGap(57, 57, 57)
                .addComponent(jbAnular)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbSalir)
                .addGap(35, 35, 35))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel1)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jcbAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jLabel3)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrInscriptas)
                    .addComponent(jrNoInscriptas))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbInscribir)
                    .addComponent(jbAnular)
                    .addComponent(jbSalir))
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jcbAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbAlumnosActionPerformed
        // TODO add your handling code here:
        borrarFilas();
        jrNoInscriptas.setSelected(false);
        jrInscriptas.setSelected(false);
        jbInscribir.setEnabled(false);
        jbAnular.setEnabled(false);
    }//GEN-LAST:event_jcbAlumnosActionPerformed

    private void jbInscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInscribirActionPerformed
        // TODO add your handling code here:
        int materiaElegida = jtInscripcion.getSelectedRow();
        if (materiaElegida != -1) {
            Alumno a = (Alumno) jcbAlumnos.getSelectedItem();
            int Idmateria = (Integer) modelo.getValueAt(materiaElegida, 0);
            String nombreMateria = (String) modelo.getValueAt(materiaElegida, 1);
            int anio = (int) modelo.getValueAt(materiaElegida, 2);
            Materia m = new Materia(Idmateria, nombreMateria, anio, true);

            Inscripcion i = new Inscripcion(a, m, 0);
            Idata.guardarInsccripcion(i);
            borrarFilas();
        }else{
            JOptionPane.showMessageDialog(this,"Debe seleccionar una materia");
        }
    }//GEN-LAST:event_jbInscribirActionPerformed

    private void jbAnularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAnularActionPerformed
        // TODO add your handling code here:
        int materiaElegida = jtInscripcion.getSelectedRow();
        if (materiaElegida != -1) {
            Alumno a = (Alumno) jcbAlumnos.getSelectedItem();
            int Idmateria = (Integer) modelo.getValueAt(materiaElegida, 0);
            Idata.borrarInscripcionMateriaAlumno(a.getIdAlumno(), Idmateria);
            borrarFilas();
        }else{
            JOptionPane.showMessageDialog(this,"Debe seleccionar una materia");
        }
    }//GEN-LAST:event_jbAnularActionPerformed

    private void jrInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrInscriptasActionPerformed
        // TODO add your handling code here:
        jrNoInscriptas.setSelected(false);
        borrarFilas();
        cargaDatosInscriptas();
        jbInscribir.setEnabled(false);
        jbAnular.setEnabled(true);
    }//GEN-LAST:event_jrInscriptasActionPerformed

    private void jrNoInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrNoInscriptasActionPerformed
        // TODO add your handling code here:
        jrInscriptas.setSelected(false);
        borrarFilas();
        cargaDatosNoInscriptas();
        jbInscribir.setEnabled(true);
        jbAnular.setEnabled(false);
    }//GEN-LAST:event_jrNoInscriptasActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAnular;
    private javax.swing.JButton jbInscribir;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox<Alumno> jcbAlumnos;
    private javax.swing.JRadioButton jrInscriptas;
    private javax.swing.JRadioButton jrNoInscriptas;
    private javax.swing.JTable jtInscripcion;
    // End of variables declaration//GEN-END:variables

    private void armarcabTabla(){
        modelo.addColumn("ID");
        modelo.addColumn("NOMBRE");
        modelo.addColumn("AÑO");
        jtInscripcion.setModel(modelo);
    }
    
     private void cargarCombo() {
        List<Alumno> listaA = Adata.listarAlumnos();
        for (Alumno alumno : listaA) {
            if (alumno.isEstado()) {
                jcbAlumnos.addItem(alumno);

            }
        }
    }

    private void borrarFilas() {
        int f = jtInscripcion.getRowCount() - 1;
        for (; f >= 0; f--) {
            modelo.removeRow(f);
        }
    }

    private void cargaDatosNoInscriptas() {
        jrInscriptas.setSelected(false);
        borrarFilas();
        Alumno alumElegido = (Alumno) jcbAlumnos.getSelectedItem();
        List<Materia> listaM = Idata.obtenerMateriasNoCursadas(alumElegido.getIdAlumno());

        for (Materia materia : listaM) {
            modelo.addRow(new Object[]{materia.getIdMateria(), materia.getNombre(), materia.getAñoMateria()});
        }
    }

    private void cargaDatosInscriptas() {

//        borrarFilas();
        Alumno alumElegido = (Alumno) jcbAlumnos.getSelectedItem();
        List<Materia> materiasCursadas = Idata.obtenerMateriasCursadas(alumElegido.getIdAlumno()); // Obtener las materias no cursadas

        for (Materia materia : materiasCursadas) {
            modelo.addRow(new Object[]{materia.getIdMateria(), materia.getNombre(), materia.getAñoMateria()});
        }

    }


}
